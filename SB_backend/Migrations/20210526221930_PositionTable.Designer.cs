// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SB_backend.Models;

namespace SB_backend.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20210526221930_PositionTable")]
    partial class PositionTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SB_backend.Models.Caracter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Caracter_Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Caracters");
                });

            modelBuilder.Entity("SB_backend.Models.Date", b =>
                {
                    b.Property<string>("Day");

                    b.Property<string>("Hour");

                    b.HasKey("Day", "Hour");

                    b.ToTable("Dates");
                });

            modelBuilder.Entity("SB_backend.Models.Director", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Directors");
                });

            modelBuilder.Entity("SB_backend.Models.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Age");

                    b.Property<Guid>("Current_TeamId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("Year_Experience");

                    b.HasKey("Id");

                    b.HasIndex("Current_TeamId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("SB_backend.Models.Position", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<string>("Position_Name");

                    b.HasKey("Id", "Position_Name");

                    b.ToTable("Positions");

                    b.HasData(
                        new { Id = new Guid("648d796e-78da-4249-a4be-f66ae0abb79c"), Position_Name = "C" },
                        new { Id = new Guid("2c709e68-1add-42ec-839b-681fec1eb9b6"), Position_Name = "1B" },
                        new { Id = new Guid("00000000-0000-0000-0000-000000000000"), Position_Name = "2B" },
                        new { Id = new Guid("e761a488-e708-4f04-a35e-0726877cd83e"), Position_Name = "3B" },
                        new { Id = new Guid("877da458-a2b7-4fed-969a-7a94578b2947"), Position_Name = "SS" },
                        new { Id = new Guid("4c6465b8-6861-41d2-8ccb-b968978a2f52"), Position_Name = "Lanzador" },
                        new { Id = new Guid("b9a2f3f4-c493-4a5f-bc83-4e307543f405"), Position_Name = "LF" },
                        new { Id = new Guid("1ae49d37-92f2-4f34-89b2-8950d54fa999"), Position_Name = "RF" },
                        new { Id = new Guid("1e9ff5c1-2ea0-4f58-a0ba-9c543626b080"), Position_Name = "CF" },
                        new { Id = new Guid("88c53dfd-6f39-4710-82c2-256f3f35c418"), Position_Name = "BD" }
                    );
                });

            modelBuilder.Entity("SB_backend.Models.Serie", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<DateTime>("Init_Date")
                        .HasColumnType("date");

                    b.Property<DateTime>("End_Date")
                        .HasColumnType("date");

                    b.Property<Guid>("CaracterId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id", "Init_Date", "End_Date");

                    b.HasAlternateKey("End_Date", "Id", "Init_Date");

                    b.HasIndex("CaracterId");

                    b.ToTable("Series");
                });

            modelBuilder.Entity("SB_backend.Models.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Color")
                        .IsRequired();

                    b.Property<string>("Initials")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("SB_backend.Models.Player", b =>
                {
                    b.HasOne("SB_backend.Models.Team", "Current_Team")
                        .WithMany()
                        .HasForeignKey("Current_TeamId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SB_backend.Models.Serie", b =>
                {
                    b.HasOne("SB_backend.Models.Caracter", "Caracter_Serie")
                        .WithMany()
                        .HasForeignKey("CaracterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
